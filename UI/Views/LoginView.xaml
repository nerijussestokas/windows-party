<UserControl x:Class="UI.Views.LoginView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d" Background="#0b0f27"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ImageBrush x:Key="Button.Static.Background" ImageSource="/Assets/Button.png"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="Transparent"/>
        <ImageBrush x:Key="Button.MouseOver.Background" ImageSource="/Assets/LogInButtonHover.png"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="Transparent"/>
        <ImageBrush x:Key="Button.Pressed.Background" ImageSource="/Assets/LogInButtonHover.png"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="LogInButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.Resources>
            <ImageBrush x:Key="UsernameInputField" ImageSource="/Assets/UserInput.png" Stretch="Uniform"/>
            <ImageBrush x:Key="PasswordInputField" ImageSource="/Assets/PasswordInput.png" Stretch="Uniform"/>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition />
        </Grid.RowDefinitions>

        <TextBox x:Name="UserName" Background="{StaticResource UsernameInputField}" BorderThickness="0" 
                 Width="200" Height="32" HorizontalContentAlignment="Left" VerticalContentAlignment="Center"
                 Padding="25,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
        <TextBlock IsHitTestVisible="False" Text="Username" VerticalAlignment="Center" 
                   HorizontalAlignment="Center" Margin="-95,0,0,0" Foreground="#999">
            <TextBlock.Style>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Text, ElementName=UserName}" Value="">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>

        <PasswordBox x:Name="UserPassword" PasswordChanged="PasswordBoxChanged" Background="{StaticResource PasswordInputField}" BorderThickness="0" 
                 Width="200" Height="32" HorizontalContentAlignment="Left" VerticalContentAlignment="Center"
                 Padding="25,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0, 80, 0, 0"/>
        <Label x:Name="PasswordLabel" Content="Password" Foreground="#999" Width="200" Height="32" HorizontalContentAlignment="Left" VerticalContentAlignment="Center"
                 Padding="26,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0, 80, 0, 0" IsHitTestVisible="False"/>

        <Button x:Name="LogIn" CommandParameter="{Binding ElementName=UserName}" 
                Width="200" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0, 160, 0, 0" Content="Log in" Style="{DynamicResource LogInButtonStyle}" />

        <Image Source="/Assets/Logo.png" Height="40" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0, -160, 0, 0" />
        <Grid.Background>
            <ImageBrush ImageSource="/Assets/BG.png" Stretch="UniformToFill" Opacity="0.2"/>
        </Grid.Background>
    </Grid>
</UserControl>
